@page "/comp"
@using System.Globalization
@using CSRegler.Resources
@using CSRegler.Pages
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Http
@inject IStringLocalizer<CSReglerResource> Loc
@inject NotificationService NotificationService
<PageTitle>Compressor</PageTitle>


<!DOCTYPE html>
<html>
<head>
<style>
* { box-sizing: border-box; }
 body { font-family: Arial; padding: 10px; background: #f1f1f1; }
/* Header/Blog Title */
.header { padding: 30px;  text-align: center;  background: white;}
.header h1 {  font-size: 50px;}
.vertical-menu {  width: 200px;  height: 500px;  overflow-y: auto;}
.vertical-menu a {   background-color: #eee;  color: black;   display: block;  padding: 5px;  text-decoration: none;}
.vertical-menu a:hover {  background-color: #ccc;}
.vertical-menu a.active {  background-color: #04AA6D;  color: white;}
/* Create two unequal columns that floats next to each other */
/* Left column */
.leftcolumn {     float: left;  width: 25%;}
/* Right column */
.rightcolumn {  float: left;  width: 75%;  background-color: #f1f1f1;  padding-left: 0px;}
/* Fake image */
.fakeimg {  background-color: #aaa;  width: 100%;  padding: 20px;}
/* Add a card effect for articles */
.card {  background-color: white;  padding: 20px;  margin-top: 20px;}
/* Clear floats after the columns */
.row:after {  content: ;  display: table;  clear: both;}
/* Footer */
.footer {  padding: 10px;  text-align: center;  background: #ddd; margin-top: 500px;}

/* Add a black background color to the top navigation */
.topnav {  background-color: #333;  overflow: hidden;}
/* Style the links inside the navigation bar */
.topnav a {  float: left;  color: #f2f2f2;  text-align: center;  padding: 14px 16px;  text-decoration: none;  font-size: 17px;}
/* Change the color of links on hover */
.topnav a:hover {  background-color: #ddd;  color: black;}
/* Add a color to the active/current link */
.topnav a.active {  background-color: #F4AA6A;  color: white;}
button {  background-color: #04AA6D;  color: white;  
padding: 14px 20px;  margin: 8px 0;  border: none;  cursor: pointer;  width: 100%;}
button:hover {  opacity: 0.8;}
</style>
</head>
<body>

<div class='topnav'>
<a href='/'>Home</a>
<a href='/hardwareconfig'>Hardware Configuration</a>
<a href='/ioconfig'>IO Configuration</a>
<a href='/unitconfig'>Unit Configuration</a>
<a href='/networkconfig'>Network Configuration</a>
 </div>

  <div class='row'>
   <div class='leftcolumn' >
     <div class='vertical-menu' >
 <a href='/ae'>ae</a>
 <a href='/ain'>ain</a>
 <a href='/aout'>aout</a>
 <a href='/bmsstop'>bmsstop</a>
 <a href='/calarm'>calarm</a>
 <a href='/coil'>coil</a>
 <a class='active' href='/comp'>comp</a>
 <a href='/cond'>cond</a>
 <a href='/control'>control</a>
 <a href='/coolingprio'>coolingprio</a>
 <a href='/cpset'>cpset</a>
 <a href='/cw'>cw</a>
 <a href='/date'>date time</a>
 <a href='/dehumi'>dehumi</a>
 <a href='/din'>din</a>
 <a href='/dout'>dout</a>
 <a href='/drycool'>drycool</a>
 <a href='/eco'>eco</a>
 <a href='/eev'>eev</a>
 <a href='/eheat'>eheat</a>
 <a href='/equipment'>equipment</a>
 <a href='/event'>event</a>
 <a href='/fan'>fan</a>
 <a href='/fcm'>fcm</a>
 <a href='/filter'>filter</a>
 <a href='/fire'>fire</a>
 <a href='/flow'>flow</a>
 <a href='/gasheat'>gasheat</a>
 <a href='/gecwv'>gecwv</a>
 <a href='/gvalve'>gvalve</a>
 <a href='/hgbp'>hgbp</a>
 <a href='/humi'>humi</a>
 <a href='/iobus'>iobus</a>
 <a href='/is'>is</a>
 <a href='/loaddefault'>loaddefault</a>
 <a href='/log'>log</a>
 <a href='/louver'>louver</a>
 <a href='/minmax'>minmax</a>
 <a href='/option'>option</a>
 <a href='/phase'>phase</a>
 <a href='/protocol'>protocol</a>
 <a href='/pszone'>pszone</a>
 <a href='/pump'>pump</a>
 <a href='/pwwheat'>pwwheat</a>
 <a href='/sensor'>sensor</a>
 <a href='/setpoint'>setpoint</a>
 <a href='/state'>state</a>
 <a href='/suctionv'>suctionv</a>
 <a href='/ups'>ups</a>
 <a href='/water'>water</a>
 <a href='/winter'>winter</a>
 <a href='/wprg'>wprg</a>
 <a href='/zone'>zone</a>
 	</div>
   </div>

 <div class='rightcolumn'>
 <div class='card'>
<h2>Compressor</h2>
<table>
<tr>
<td>comp </td>
<td><input type='number' name='comp1' min='1' max='4' maxlength='3' value='1'></td>
<td> startsum </td>
<td><input type='number' name='comp2' min='0' max='255' maxlength='3' value='1'></td>
</tr>

<tr>
<td>comp </td>
<td><input type='number' name='comp3' min='1' max='4' maxlength='3' value='1'></td>
<td> hyssum </td>
<td><input type='number' name='comp4' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp5' min='1' max='4' maxlength='3' value='1'></td>
<td> startwin </td>
<td><input type='number' name='comp6' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp7' min='1' max='4' maxlength='3' value='1'></td>
<td> hyswin </td>
<td><input type='number' name='comp8' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp9' min='1' max='4' maxlength='3' value='1'></td>
<td> prespeed </td>
<td><input type='number' name='comp10' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp11' min='1' max='4' maxlength='3' value='1'></td>
<td> conf </td>
<td><input type='number' name='comp12' min='0' max='1' maxlength='3' value='0'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp1' min='1' max='4' maxlength='3' value='1'></td>
<td> dout </td>
<td><input type='number' name='comp2' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp13' min='1' max='4' maxlength='3' value='1'></td>
<td> alarm </td>
<td><input type='number' name='comp14' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp15' min='1' max='4' maxlength='3' value='1'></td>
<td> commonalarm </td>
<td><input type='number' name='comp16' min='0' max='255' maxlength='3' value='0'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp17' min='1' max='4' maxlength='3' value='1'></td>
<td> alarmdelay </td>
<td><input type='number' name='comp18' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp19' min='1' max='4' maxlength='3' value='1'></td>
<td> alarmlp </td>
<td><input type='number' name='comp20' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp21' min='1' max='4' maxlength='3' value='1'></td>
<td> alarmpriolp </td>
<td><input type='number' name='comp22' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp23' min='1' max='4' maxlength='3' value='1'></td>
<td> commonalarmlp </td>
<td><input type='number' name='comp24' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp25' min='1' max='4' maxlength='3' value='1'></td>
<td> alarmdelaylp </td>
<td><input type='number' name='comp26' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp27' min='1' max='4' maxlength='3' value='1'></td>
<td> lptime </td>
<td><input type='number' name='comp28' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp29' min='1' max='4' maxlength='3' value='1'></td>
<td> lppress </td>
<td><input type='number' name='comp30' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp31' min='1' max='4' maxlength='3' value='1'></td>
<td> lptries </td>
<td><input type='number' name='comp32' min='0' max='255' maxlength='3' value='1'></td>
</tr>

<tr>
<td>comp </td>
<td><input type='number' name='comp33' min='1' max='4' maxlength='3' value='1'></td>
<td> hptime </td>
<td><input type='number' name='comp34' min='0' max='255' maxlength='3' value='1'></td>
</tr>

<tr>
<td>comp </td>
<td><input type='number' name='comp35' min='1' max='4' maxlength='3' value='1'></td>
<td> hppress </td>
<td><input type='number' name='comp36' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp37' min='1' max='4' maxlength='3' value='1'></td>
<td> hptries </td>
<td><input type='number' name='comp38' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp39' min='1' max='4' maxlength='3' value='1'></td>
<td> hpmode </td>
<td><input type='number' name='comp40' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp41' min='1' max='4' maxlength='3' value='1'></td>
<td> pause </td>
<td><input type='number' name='comp42' min='0' max='255' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp43' min='1' max='4' maxlength='3' value='1'></td>
<td> runtime </td>
<td><input type='number' name='comp44' min='0' max='10000' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp45' min='1' max='4' maxlength='3' value='1'></td>
<td> hand </td>
<td><input type='number' name='comp46' min='0' max='1' maxlength='3' value='1'></td>
</tr>


<tr>
<td>comp </td>
<td><input type='number' name='comp47' min='1' max='4' maxlength='3' value='1'></td>
<td> handon </td>
<td><input type='number' name='comp48' min='0' max='255' maxlength='3' value='1'></td>
</tr>
</table>
<table class="table table-responsive table-striped">
    <thead>
        <tr>
            <th scope="col">Beschreibung</th>
            <th scope="col">Datenpunkt</th>
            <th scope="col">Wert</th>
            <th scope="col">CRUD</th>
        </tr>
    </thead>
    <tbody>
        @if (_datenpunkte != null)
        {
            foreach (var datenpunkt in _datenpunkte)
            {
                 if (datenpunkt.DPNummer.Equals(10300))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
                 if (datenpunkt.DPNummer.Equals(131))//Datenpunkt
                {
                <tr>
                   <th scope="row">@datenpunkt.DPBeschreibung</th>
                   <td>@datenpunkt.DPNummer</td>
                   <td>@datenpunkt.DPWert</td>
                   <td><a href="/update/@datenpunkt.DatenpunktId/@seite" class="btn btn-warning btn-lg w-100 my-2">Update</a></td>
                </tr>
                }
            }
        }
    </tbody>
</table>
 </div>
 </div>
 </div>

 </body>
</html>
@inject IJSRuntime JsRuntime

@code {
    private List<Datenpunkt> _datenpunkte = null;
    public string seite = "/compressor";

    protected override async Task OnInitializedAsync()
    {
        using var context = new DPointDbContext();

        _datenpunkte = await context.Datenpunkte.ToListAsync();
    }
}
